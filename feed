<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xml:lang="ja-JP" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hail2u.net</title>
    <link>http://hail2u.net/</link>
    <description>Hail2u.net is simply a notebook of Kyo Nagashima about web design, programming &amp; their related technologies.</description>
    <language>ja-JP</language>
    <copyright>Copyright © 2002-2014, Kyo Nagashima</copyright>
    <managingEditor>kyo@hail2u.net (Kyo Nagashima)</managingEditor>
    <webMaster>kyo@hail2u.net (Kyo Nagashima)</webMaster>
    <atom:link rel="self" href="http://hail2u.net/feed"/>
    <atom:link rel="hub" href="https://pubsubhubbub.appspot.com/"/>
    <creativeCommons:license>http://creativecommons.org/licenses/by-nc/3.0/</creativeCommons:license>
    <item>
      <title>依存しているもののメジャー・バージョンアップ</title>
      <link>http://hail2u.net/blog/software/major-update-of-dependencies.html</link>
      <description>自身のライブラリーなどにおける依存しているものがSemantic Versioningで言うところのメジャー・バージョンアップした場合、APIに互換性のない変更が加えられたということなので、動作を確認して自身のライブラリーもバージョンアップする必要がある。多くの場合、パッチ・バージョンアップで十分だが、互換性のない変更が加わったAPIを透過的に使っていた場合にどうすれば良いのかよくわからなくなった。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Software</category>
      <guid isPermaLink="true">http://hail2u.net/blog/software/major-update-of-dependencies.html</guid>
      <pubDate>Wed, 19 Nov 2014 08:57:00 +0900</pubDate>
      <content:encoded>&lt;p&gt;自身のライブラリーなどにおける依存しているものが&lt;a href="http://semver.org/"&gt;Semantic Versioning&lt;/a&gt;で言うところのメジャー・バージョンアップした場合、APIに互換性のない変更が加えられたということなので、動作を確認して自身のライブラリーもバージョンアップする必要がある。多くの場合、パッチ・バージョンアップで十分だが、互換性のない変更が加わったAPIを透過的に使っていた場合にどうすれば良いのかよくわからなくなった。&lt;/p&gt;

&lt;p&gt;透過的に使っていたAPIに互換性のない変更が加わっているということは、ユーザーがライブラリーを使う方法に互換性のない変更が加わるということになる。仮にこれが依存しているものの変更でないとすると、当然メジャー・バージョンアップすべき変更ということになる。&lt;/p&gt;

&lt;p&gt;しかしこういった場合にメジャー・バージョンアップするとすると、最悪の場合依存しているもののメジャー・バージョンアップごとに自身のライブラリーもメジャー・バージョンアップしなくてはならなくなる。自身のライブラリーにおける変更は少ないか全くないにも関わらず、だ。これはフラストレーションが溜まりそうな予感しかない。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;API&lt;em&gt;そのもの&lt;/em&gt;においてどういう変更が加わったのか&lt;/li&gt;
&lt;li&gt;APIの&lt;em&gt;使われ方&lt;/em&gt;においてどういう変更が加わったのか&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このどちらの観点でSemantic Versioningのバージョンアップを行うかということになる。後者を重視した方がユーザーに優しいと言えるが、後に首を絞めることになりそうだ。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;PostCSS v3でSource Mapがデフォルトでインラインに埋め込まれるようになった影響で、自分で作っているCSSWringやCSS MQPackerの使い方に互換性のない変更が加わることとなった。この際にこういった疑問を持ったわけだが、まだ自分の中ですら結論は出ていない。&lt;/p&gt;

&lt;p&gt;とりあえずバージョンは上げると戻せないので、上げないと思う。後ろ向きな理由だ。&lt;/p&gt;</content:encoded>
    </item>
    <item>
      <title>CSSWringで標準入力を読めるように</title>
      <link>http://hail2u.net/blog/coding/read-stdin-in-csswring-cli.html</link>
      <description>先週末の某カンファレンスの方面から無言の圧力を感じたので、CSSWringのCLIプログラムをパイプで繋げられるようにした。入力ファイルが省略されたら……で実装しようとしていたが、オプションの組み合わせの分岐がややこしい。面倒そうだったので入力ファイルとして指定した文字列が-だった場合に……で実装した。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Coding</category>
      <guid isPermaLink="true">http://hail2u.net/blog/coding/read-stdin-in-csswring-cli.html</guid>
      <pubDate>Tue, 18 Nov 2014 01:47:00 +0900</pubDate>
      <content:encoded>&lt;p&gt;先週末の某カンファレンスの方面から無言の圧力を感じたので、&lt;a href="https://github.com/hail2u/node-csswring"&gt;CSSWring&lt;/a&gt;のCLIプログラムを&lt;a href="https://github.com/hail2u/node-csswring/commit/95d5346b096bf1063afbe4add18f46b82405032d"&gt;パイプで繋げられるように&lt;/a&gt;した。入力ファイルが省略されたら……で実装しようとしていたが、オプションの組み合わせの分岐がややこしい。面倒そうだったので入力ファイルとして指定した文字列が&lt;code&gt;-&lt;/code&gt;だった場合に……で実装した。&lt;/p&gt;

&lt;p&gt;利用方法は今まで入力ファイル名を指定した部分を&lt;code&gt;-&lt;/code&gt;に差し替えるだけで良い。特に今までの使い方を阻害することもないと思う。&lt;/p&gt;

&lt;pre&gt;&lt;samp&gt;$ &lt;kbd&gt;cat input.css | csswring -&lt;/kbd&gt;
$ &lt;kbd&gt;csswring - &amp;lt;input.css&lt;/kbd&gt;
&lt;/samp&gt;&lt;/pre&gt;

&lt;p&gt;もちろんこのどちらでも大丈夫になっている。この場合は出力ファイルを省略しているので標準出力へ処理結果が吐かれる。&lt;/p&gt;

&lt;pre&gt;&lt;samp&gt;$ &lt;kbd&gt;cat input.css | csswring - out.css&lt;/kbd&gt;
&lt;/samp&gt;&lt;/pre&gt;

&lt;p&gt;標準入力を読みつつ、出力ファイルを指定することもできる。この場合は&lt;code&gt;out.css&lt;/code&gt;に処理結果が吐かれる。&lt;/p&gt;

&lt;pre&gt;&lt;samp&gt;$ &lt;kbd&gt;cat input.css | csswring --sourcemap -&lt;/kbd&gt;
$ &lt;kbd&gt;cat input.css | csswring --sourcemap - out.css&lt;/kbd&gt;
&lt;/samp&gt;&lt;/pre&gt;

&lt;p&gt;Source Mapsも問題なく出力される。前者ではインラインでData URI化されて埋め込まれ、後者では&lt;code&gt;out.css.map&lt;/code&gt;に吐かれる。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;実装では&lt;a href="http://hail2u.net/blog/coding/nodejs-read-stdin.html"&gt;標準入力を同期的に読もうか&lt;/a&gt;とも考えたが、同期に固執するほどではないのでNode.js界隈のCLIプログラム達でメジャーな&lt;code&gt;process.openStdin()&lt;/code&gt;を使って実装した。&lt;code&gt;process.openStdin()&lt;/code&gt;はドキュメントに載っていない気がする。ここが非同期になった関係で出力部分に少し手を入れることになったが、概ねそのままで済んだので新たにバグは入っていないと思う。&lt;/p&gt;

&lt;p&gt;ここらへんまで面倒を見てくれるNode.jsパッケージなどもいくつかあるようだ。しかしインタラクティブな入力を処理する必要もないプログラムなので、この程度のもので良いだろう。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href="https://github.com/postcss/postcss/issues/134"&gt;PostCSS v3のパーサーのバグ&lt;/a&gt;の修正を待って、まとめてリリースする予定だ。そのうち気が向いたら出力の方も善処する。&lt;/p&gt;</content:encoded>
    </item>
    <item>
      <title>PostCSS v3の変更点</title>
      <link>http://hail2u.net/blog/coding/postcss-v3.html</link>
      <description>PostCSS v3.0.0がリリースされ、かなり高速化した。一部互換性のないAPIの変更があるが、多くは内部的な変更でそれほど影響はないような印象だ。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Coding</category>
      <guid isPermaLink="true">http://hail2u.net/blog/coding/postcss-v3.html</guid>
      <pubDate>Mon, 17 Nov 2014 02:51:00 +0900</pubDate>
      <content:encoded>&lt;p&gt;&lt;a href="https://github.com/postcss/postcss/releases/tag/3.0.0"&gt;PostCSS v3.0.0&lt;/a&gt;がリリースされ、かなり高速化した。一部互換性のないAPIの変更があるが、多くは内部的な変更でそれほど影響はないような印象だ。&lt;/p&gt;

&lt;p&gt;一番大きな変更点はノードの配列名の統一だろう。今までルールセット内の定義の配列は&lt;code&gt;decls&lt;/code&gt;、ルールセットの配列は&lt;code&gt;rules&lt;/code&gt;と分けられていたが、v3.0.0で&lt;code&gt;childs&lt;/code&gt;に統一された。At-ruleでは子ノードに定義をとるもの(&lt;code&gt;@font-face&lt;/code&gt;など)とルールセットをとるもの(&lt;code&gt;@media&lt;/code&gt;など)があるので、別々に処理しなければならないパターンもありえたが、その必要が少し減ることになる。&lt;/p&gt;

&lt;p&gt;なお&lt;code&gt;childs&lt;/code&gt;という違和感のある名称はv3.1.0で&lt;code&gt;children&lt;/code&gt;(か&lt;code&gt;nodes&lt;/code&gt;など)に修正される模様。&lt;/p&gt;

&lt;p&gt;もうひとつはSource Mapの生成でインラインのものがデフォルトになったことだ。別ファイルに吐きたい場合は明示的に無効にする必要がある。言い換えると&lt;code&gt;from&lt;/code&gt;や&lt;code&gt;to&lt;/code&gt;が事実上必須ではなくなったということでもある。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var postcss = require(&amp;#39;postcss&amp;#39;);
var css = &amp;#39;.foo { color: black }&amp;#39;;

console.log(postcss.process(css, {
  &lt;mark&gt;map: true&lt;/mark&gt;
}));
// .foo { color: black }
// /*# sourceMappingURL=data:application/json:base64,... */

console.log(postcss.process(css, {
  &lt;mark&gt;map: {
    inline: false
  },&lt;/mark&gt;
  from: &amp;#39;in.css&amp;#39;,
  to: &amp;#39;out.css&amp;#39;
}));
// .foo { color: black }
// /*# sourceMappingURL=to.css.map */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ただし既に外部Source Mapファイルを参照しているCSSを処理する場合は、そのまま外部Source Mapファイルを更新するようになっている。ここらへんを強制的に変更する手段が用意されていないようで、片手落ちっぽい。&lt;/p&gt;

&lt;p&gt;またデフォルトで元ソースを埋め込むようにも変更になった。微妙な部分だけれど、元ソースが不要になるとパス解決の面で楽ができると思うので、歓迎できる変更と捉えている。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;速度の改善がメインのようなので、既存のコードはちょっとした変更だけで動くように思う。Source Mapsだけには注意してやりたい。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/hail2u/node-csswring"&gt;CSSWring&lt;/a&gt;は少々手を入れる必要があったが、簡単な変更でだいたい大丈夫そうだ。ついでにCLIツールで出力ファイル名がなかった場合にインラインでSource Mapを埋め込むようにしておいた。&lt;a href="https://github.com/hail2u/node-css-mqpacker"&gt;CSS MQPacker&lt;/a&gt;は特に変更することなく更新出来た……が、テストがテストになってない(&lt;code&gt;undefiend === undefined&lt;/code&gt;で通ってた)ようなので修正した。&lt;/p&gt;</content:encoded>
    </item>
    <item>
      <title>下線のクロッピング</title>
      <link>http://hail2u.net/blog/webdesign/cropping-underline.html</link>
      <description>Smarter Link Underlines For Every WebsiteというMediumのリンクの下線のアレをStylusのミックスインにしたものについての記事を読んでいた。記事そのものは普通(か劣化したもの)で新たな発見は特にないが、下線のクロッピングはブラウザー・レベルじゃないと難しそうだという印象を改めて持った。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Web Design</category>
      <guid isPermaLink="true">http://hail2u.net/blog/webdesign/cropping-underline.html</guid>
      <pubDate>Sun, 16 Nov 2014 16:28:00 +0900</pubDate>
      <content:encoded>&lt;p&gt;&lt;a href="https://eager.io/blog/smarter-link-underlines/"&gt;Smarter Link Underlines For Every Website&lt;/a&gt;というMediumのリンクの下線のアレをStylusのミックスインにしたものについての記事を読んでいた。記事そのものは普通(か劣化したもの)で新たな発見は特にないが、下線のクロッピングはブラウザー・レベルじゃないと難しそうだという印象を改めて持った。&lt;/p&gt;

&lt;p&gt;理由は下線がクロッピングされるような文字で終わる単語で下線がきちんと引かれないことにある。iOS 8のMobile Safariのスクリーンショットを載せていて、それでは“g”で終わっていても下線がぎりぎり引かれているが、記事ではこれを「美しくない」としもっとカットするような実装になっている。&lt;/p&gt;

&lt;p&gt;これでは“gggg”などクロッピングされるような文字の連続で終わる時、下線が途中で切れてしまうような印象を受けてしまう。無いとは思うが“gggg”という語に下線を引いても見えなくもなる。&lt;/p&gt;

&lt;figure&gt;
  &lt;img alt="下線のクロッピングをCSSレベルで実装してしまうと、こういった“endwithgggggg”や“ggggggggg”には下線が引かれているが見えなくなってしまう" src="http://hail2u.net/images/blog/underline-cropping.png"&gt;

  &lt;figcaption&gt;Underline Cropping Examples&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;この記事のようにわざわざ端をカットしたりしない場合でも、下線のクロッピングをCSSで行うとこういった感じになってしまうことがありうるだろう。&lt;code&gt;1px&lt;/code&gt;であったり&lt;code&gt;0.3em&lt;/code&gt;であったり一定のサイズの&lt;code&gt;text-shadow&lt;/code&gt;プロパティーで行うことになるため、下線がどう引かれるかは字形と文字サイズに強く依存してしまうからだ。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;日本語の文章では下線のクロッピングが効果的なケースは少ないと考えられる。下線の位置と色の制御はともかく、そのクロッピングはやり過ぎだろう。&lt;/p&gt;</content:encoded>
    </item>
    <item>
      <title>夢</title>
      <link>http://hail2u.net/blog/misc/dreaming-20141115.html</link>
      <description>サンレッドが出てきた夢を見た。川崎市のアレ。サキューンのところに今から遊びに行くとか言ってて、「寒そうですねー」みたいにしゃべってた。ふとTシャツ見たら「東京砂漠」って書いてあったけどツッコめなかった。ちゃんとわかるオチがついてる夢は初めて見た気がする。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Misc.</category>
      <guid isPermaLink="true">http://hail2u.net/blog/misc/dreaming-20141115.html</guid>
      <pubDate>Sat, 15 Nov 2014 13:23:00 +0900</pubDate>
      <content:encoded>&lt;p&gt;サンレッドが出てきた夢を見た。川崎市のアレ。サキューンのところに今から遊びに行くとか言ってて、「寒そうですねー」みたいにしゃべってた。ふとTシャツ見たら「東京砂漠」って書いてあったけどツッコめなかった。ちゃんとわかるオチがついてる夢は初めて見た気がする。&lt;/p&gt;

&lt;p&gt;サンレッドが出てくるというかキャラクターが出てくる夢も初めて見た気がする。夢にバラエティーが増えてきた。最近はしばちゅうさんに今更ハマっていて、そろそろ夢に出てこないかなーと思ってる。鉄蒺藜骨朶で殴られるとか鶏肋食わされるとかっぽいけど。&lt;/p&gt;</content:encoded>
    </item>
    <item>
      <title>Abitax Tag Light</title>
      <link>http://hail2u.net/blog/gadget/abitax-tag-light.html</link>
      <description>キーホルダーにつけていたLEDのハンディライトが歪んでしまい接触が悪くなった。もっとコンパクト(今までのは単4乾電池くらいのサイズだった)で常時点灯に切り替えられるものを探しててAbitaxのTag Lightを雑貨屋で見かけて買った。現行モデルが税込み800円くらいで投げ売りされてた。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Gadget</category>
      <guid isPermaLink="true">http://hail2u.net/blog/gadget/abitax-tag-light.html</guid>
      <pubDate>Fri, 14 Nov 2014 14:10:00 +0900</pubDate>
      <content:encoded>&lt;figure&gt;
  &lt;a href="http://www.amazon.co.jp/gp/product/B001GMAG0A/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B001GMAG0A&amp;amp;linkCode=as2&amp;amp;tag=hail2unet-22"&gt;&lt;img alt="ABITAX(アビタックス) タグライト ライトグレー 0510-N" src="http://ecx.images-amazon.com/images/I/31cSR0BzXWL.jpg"&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;キーホルダーにつけていたLEDのハンディライトが歪んでしまい接触が悪くなった。もっとコンパクト(今までのは単4乾電池くらいのサイズだった)で常時点灯に切り替えられるものを探してて&lt;a href="http://www.amazon.co.jp/gp/product/B001GMAG0A/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B001GMAG0A&amp;amp;linkCode=as2&amp;amp;tag=hail2unet-22"&gt;AbitaxのTag Light&lt;/a&gt;を雑貨屋で見かけて買った。現行モデルが税込み800円くらいで投げ売りされてた。&lt;/p&gt;

&lt;p&gt;大きさは手の親指の第一関節くらいまでのサイズでコンパクトさは申し分ない。切り替えスイッチの辺りを押すと押している間だけ点灯して、スライドさせると連続点灯する。連続点灯で6時間と謳っている。それを考えるとそうは電池切れしないはず。キーホルダーにつけるものとしてはベストに近そう。&lt;/p&gt;

&lt;p&gt;小さくてプラスチック製なので軽いこと、ナスカンの部分もつや消しされていて安っぽくはないこと、など見た目も良い感じだった。色も12色から選べる……けど、これはあんまり良い色はない。僕はライトグレーにしたけど、これかホワイトかブルーかくらいで、他はちょっと変な感じだった。どの色を選んでもライトの部分には色がついていないので、どれも白色LEDの明かり。&lt;/p&gt;</content:encoded>
    </item>
    <item>
      <title>雑</title>
      <link>http://hail2u.net/blog/internet/zatsu.html</link>
      <description>雑な情報を知りたい。キュレーション・メディアに偏ると、知りたいことを集めることしかできないので世界が広がらない。有名人ベースだと多少改善されるけれども、彼らもまた自分のあるべき姿みたいなイメージを持って活動しがちであるので、あまり意味が無い。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Internet</category>
      <guid isPermaLink="true">http://hail2u.net/blog/internet/zatsu.html</guid>
      <pubDate>Thu, 13 Nov 2014 13:01:00 +0900</pubDate>
      <content:encoded>&lt;p&gt;雑な情報を知りたい。キュレーション・メディアに偏ると、知りたいことを集めることしかできないので世界が広がらない。有名人ベースだと多少改善されるけれども、彼らもまた自分のあるべき姿みたいなイメージを持って活動しがちであるので、あまり意味が無い。&lt;/p&gt;

&lt;figure&gt;
  &lt;blockquote&gt;
    &lt;p&gt;ライフハックみたいな概念があるじゃないですか。自分が必要な物だけをクリッピングする。そうすると自分の好きな情報だけが集まってしまって、そこに進化はないんですよ。&lt;/p&gt;
  &lt;/blockquote&gt;

  &lt;figcaption&gt;— &lt;cite&gt;なぜ、京都の〈恵文社一乗寺店〉は、わざわざ全国から客が訪れる本屋なのか？&lt;/cite&gt; (&lt;cite&gt;&lt;a href="http://www.amazon.co.jp/gp/product/4838789289/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=4838789289&amp;amp;linkCode=as2&amp;amp;tag=hail2unet-22"&gt;BRUTUS特別編集合本・本屋好き。&lt;/a&gt;&lt;/cite&gt;より)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;書店であったり雑誌のようなサイズがある程度決まっている媒体ならば、入店した・購入した人がさばける範囲で雑な情報を提供することも難しくない。ウェブサイトのような成長し続ける媒体の場合、アクセスした人がストレートに興味を持ちそうな記事の提供は可能ではあるが、雑な情報であるところのアクセスした人を刺激するような記事を提供することがとても難しくなる。&lt;/p&gt;

&lt;p&gt;ジャンル特化でウェブログを使い分けたりであるとか、TPOに合わせてソーシャル・メディアへの投稿を使い分けたりしていると、雑な情報のプラットフォームにはなりづらい。個が見えづらくなり、情報に特化されるからで、インターネットではそれが効率性のため良しとされている。&lt;/p&gt;

&lt;p&gt;この効率性により得られるものはとても多いと思うけれども、失われるものも少なくはない。あまりジャンルに特化しない形で記事を発信するようなウェブサイトがもっと増えてきても楽しいんじゃないか。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;まずは雑な情報の集まりであるようにウェブサイトを構築する必要があるように思う。ということで少し偏らせつつもノンジャンルでこのウェブログは書いている。&lt;/p&gt;</content:encoded>
    </item>
    <item>
      <title>extract.bat</title>
      <link>http://hail2u.net/blog/coding/extract-bat.html</link>
      <description>遂にNoahを、というか統合アーカイバープロジェクトのDLLを捨てることに決めて、何か良さそうな解凍専用ソフトウェアを探してた。けれどこれというものを見つけられなかったので、サポートしているフォーマットが多い7-ZipのCLIを叩くバッチファイルにした。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Coding</category>
      <guid isPermaLink="true">http://hail2u.net/blog/coding/extract-bat.html</guid>
      <pubDate>Wed, 12 Nov 2014 10:48:00 +0900</pubDate>
      <content:encoded>&lt;p&gt;遂に&lt;a href="http://www.kmonos.net/lib/noah.ja.html"&gt;Noah&lt;/a&gt;を、というか統合アーカイバープロジェクトのDLLを捨てることに決めて、何か良さそうな解凍専用ソフトウェアを探してた。けれどこれというものを見つけられなかったので、サポートしているフォーマットが多い&lt;a href="http://www.7-zip.org/"&gt;7-Zip&lt;/a&gt;のCLIを叩くバッチファイルにした。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@echo off

%~d1
cd &amp;quot;%~p1&amp;quot;

7z x -y -o&amp;quot;%~n1&amp;quot; %1

exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;7-ZipをインストールするとCLI版の&lt;code&gt;7z.exe&lt;/code&gt;もインストールされるので、それをパスの通ったところに配置する必要がある。&lt;code&gt;start&lt;/code&gt;コマンド経由にすればパスの通ったところに配置する必要もなさそう(多分)。ドライブの移動を忘れないことと&lt;code&gt;-y&lt;/code&gt;でエラー等を無視するようにして一発解凍もどきに。送るからだとアレなのでプログラムから開くでこのバッチファイルに関連付けると安定。&lt;/p&gt;

&lt;p&gt;Noahにあったフォルダー・ツリーの最小化みたいな機能がちょっと欲しい。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;2014年にもなってバッチファイルかという感じだけど、最近はNode.js (というよりもnpm)やGoのおかげでCLIツールが充実してきたので、こういった簡単なラッパー的なバッチファイルを書く機会が増えてる。良い時代になったのか悪い時代に戻ったのか微妙なところだ。&lt;/p&gt;</content:encoded>
    </item>
    <item>
      <title>Google Fonts版のSource Sans Pro</title>
      <link>http://hail2u.net/blog/webdesign/source-sans-pro-google-fonts-version.html</link>
      <description>Google Fonts版のSource Sans Proはオリジナルと微妙に違うところがある。多くはほとんど気づかないようなものだが、稀に顕著に現れることもあり困る。僕が今まで気づいた中で最も顕著なものはExtra Lightを使った時に38px以上にすると、文字のストロークがExtra Lightに見えない程度に太くなってしまうという問題だ。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Web Design</category>
      <guid isPermaLink="true">http://hail2u.net/blog/webdesign/source-sans-pro-google-fonts-version.html</guid>
      <pubDate>Tue, 11 Nov 2014 17:29:00 +0900</pubDate>
      <content:encoded>&lt;p&gt;&lt;a href="https://www.google.com/fonts"&gt;Google Fonts&lt;/a&gt;版のSource Sans Proはオリジナルと微妙に違うところがある。多くはほとんど気づかないようなものだが、稀に顕著に現れることもあり困る。僕が今まで気づいた中で最も顕著なものはExtra Lightを使った時に38px以上にすると、文字のストロークがExtra Lightに見えない程度に太くなってしまうという問題だ。&lt;/p&gt;

&lt;p&gt;View Demo: &lt;a href="http://hail2u.net/pub/test/600.html"&gt;Source Sans Pro&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;手元のWindowsではほとんどすべてのブラウザーで再現した。ClearType有効・無効や古いOSだとまた変わるかもしれない。iPhone 5sのMobile Safari 8では再現しないが、これも世代によって変わるかもしれない。太くなるだけでなく汚くなってしまうので、なかなか厳しい。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;これに気づいたのは結構前で、Google Fontsのフォントがイマイチ信用できないというきっかけになった。再現性やフォントによるとか多分にそういう面はあると思うが、フォント・ファイルの軽量化の過程で色々失われているものがあるということでもある。そしてその失われたものによる問題がいつ顕在化するのか、そしてそれは修正されるのか、という辺りが不透明なウェブサービスだと言えると思う。Google Fontsの利用をやめた隠れた理由のひとつはこの不透明さだ。&lt;/p&gt;

&lt;p&gt;トレードオフなどという便利な言葉で逃げることも可能な話ではあるだろう。しかし少なくともオープンソースの欧文フォントに関しては自前でホスティングしても問題ないレベルまでウェブは進化している。それならばオリジナルを最大限維持する形で提供することを確実に行うことを重視するという選択もアリではないだろうか。&lt;/p&gt;</content:encoded>
    </item>
    <item>
      <title>風呂が生えた</title>
      <link>http://hail2u.net/blog/misc/new-bath.html</link>
      <description>4日くらいで風呂生えた。バスマジックリン入れると自動でお掃除できる最先端の風呂に入る人類に進化できた。LED照明で電球色になったけど、あまり違和感はなさそうな感じで良かった。技術の進歩楽しい。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Misc.</category>
      <guid isPermaLink="true">http://hail2u.net/blog/misc/new-bath.html</guid>
      <pubDate>Mon, 10 Nov 2014 09:45:00 +0900</pubDate>
      <content:encoded>&lt;figure&gt;
  &lt;img alt="水栓がかっこいいおそうじ機能付き風呂の様子" src="http://hail2u.net/images/blog/new-bath.jpg"&gt;
&lt;/figure&gt;

&lt;p&gt;4日くらいで風呂生えた。バスマジックリン入れると自動でお掃除できる最先端の風呂に入る人類に進化できた。LED照明で電球色になったけど、あまり違和感はなさそうな感じで良かった。技術の進歩楽しい。&lt;/p&gt;

&lt;p&gt;ただ、ちょっと高機能なものを付けるとリモコンだらけになるのはどうにかして欲しい。風呂沸かし、お掃除機能、乾燥機能付き換気扇の3つのリモコンにくわえて照明のスイッチがある。Amazon Echoみたいな奴……とまでは言わないけど、スマホで制御したい。&lt;/p&gt;</content:encoded>
    </item>
    <item>
      <title>Documentsに「ウェブ・タイポグラフィーのベスト・プラクティス」を追加</title>
      <link>http://hail2u.net/documents/web-typography-best-practices.html</link>
      <pubDate>Sun, 28 Sep 2014 00:51:35 +0900</pubDate>
      <guid isPermaLink="true">http://hail2u.net/documents/web-typography-best-practices.html</guid>
      <description>&lt;p&gt;&lt;a href="http://www.smashingmagazine.com/2013/05/17/typographic-design-patterns-practices-case-study-2013/"&gt;Smashing Magazineによるウェブサイトのタイポグラフィーについての調査&lt;/a&gt;をわかりやすくまとめた&lt;a href="http://bootstrapbay.com/blog/web-typography-best-practices/"&gt;The All-Inclusive Guide to Web Typography Best Practices&lt;/a&gt;の日本語訳です。ベスト・プラクティスになりうる部分のみコンパクトに抽出された参考になる文書だと思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Projectsに「rsync-ac (Gruntプラグイン)」を追加</title>
      <link>https://github.com/hail2u/grunt-rsync-ac</link>
      <pubDate>Mon, 07 Jul 2014 16:30:38 +0900</pubDate>
      <guid isPermaLink="true">https://github.com/hail2u/grunt-rsync-ac</guid>
      <description>&lt;p&gt;rsync-ac (Gruntプラグイン)は&lt;a href="http://rsync.samba.org/"&gt;rsync&lt;/a&gt;を使って他のディレクトリへファイルをコピーするGruntプラグインです。オプション設定を絞ることであまり考えずに使えるようにしました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Projectsに「pubsubhubbub_publish (Gruntプラグイン)」を追加</title>
      <link>https://github.com/hail2u/grunt-pubsubhubbub_publish</link>
      <pubDate>Mon, 07 Jul 2014 00:44:37 +0900</pubDate>
      <guid isPermaLink="true">https://github.com/hail2u/grunt-pubsubhubbub_publish</guid>
      <description>&lt;p&gt;pubsubhubbub_publish (Gruntプラグイン)はGoogleが提供している&lt;a href="https://pubsubhubbub.appspot.com/"&gt;PubSubHubbubハブ&lt;/a&gt;へ指定したURLのフィードを&lt;code&gt;publish&lt;/code&gt;するGruntプラグインです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Projectsに「Picks」を追加</title>
      <link>http://picks.hail2u.net/</link>
      <pubDate>Sun, 06 Jul 2014 04:48:23 +0900</pubDate>
      <guid isPermaLink="true">http://picks.hail2u.net/</guid>
      <description>&lt;p&gt;Picksは僕が興味をもった様々なURLをアイコンをヒントにざっと眺めることの出来るウェブサイトです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>WEB+DB Press Vol.81にて「イマドキHTML/CSS開発」を執筆</title>
      <link>http://www.amazon.co.jp/WEB-DB-PRESS-Vol-81-%E9%95%B7%E5%B6%8B/dp/4774165069%3FSubscriptionId%3D0WVS3J53FVP9M1E7ET02%26tag%3Dhail2unet-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774165069</link>
      <pubDate>Thu, 19 Jun 2014 15:31:33 +0900</pubDate>
      <guid isPermaLink="true">http://www.amazon.co.jp/WEB-DB-PRESS-Vol-81-%E9%95%B7%E5%B6%8B/dp/4774165069%3FSubscriptionId%3D0WVS3J53FVP9M1E7ET02%26tag%3Dhail2unet-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774165069</guid>
      <description>&lt;p&gt;Web標準技術の進歩やデバイスの多様化といったWebをとりまく環境の急激な変化は、従来のWebサイト開発手法を時代遅れのものとしつつあります。設計から実装・検証、そしてデバイスへの最適化まで、ワークフロー全体の変革が求められているということです。本特集では、現在はもちろん、これからも増大し続ける多様性を見据えてどのような開発手法をとっていくべきかについて、実例を交じえながら詳しく解説していきます。6月24日発売、&lt;a href="http://www.amazon.co.jp/WEB-DB-PRESS-Vol-81-%E9%95%B7%E5%B6%8B/dp/4774165069%3FSubscriptionId%3D0WVS3J53FVP9M1E7ET02%26tag%3Dhail2unet-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4774165069"&gt;Amazonにて予約受付中&lt;/a&gt;です！&lt;/p&gt;</description>
    </item>
    <item>
      <title>Twitterアカウントを作成</title>
      <link>https://twitter.com/hail2unet</link>
      <pubDate>Thu, 19 Jun 2014 07:15:12 +0900</pubDate>
      <guid isPermaLink="true">https://twitter.com/hail2unet</guid>
      <description>&lt;p&gt;更新情報やブログに公開された記事の他、重要なお知らせを通知するためのTwitterアカウントを作成しました。今まで個人のアカウントでツイートされていたそれらは、今後こちらで行われます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Projectsに「UnUTM」を追加</title>
      <link>https://github.com/hail2u/unutm</link>
      <pubDate>Thu, 12 Jun 2014 06:32:16 +0900</pubDate>
      <guid isPermaLink="true">https://github.com/hail2u/unutm</guid>
      <description>&lt;p&gt;UnUTMはウェブページのURLからGoogle Analyticsなどで利用されているUrchin Traffic Monitor (UTM)用のパラメーターを自動的に削除し、URLの分散を解消するJavaScriptライブラリです。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Projectsに「CSSWring」を追加</title>
      <link>https://github.com/hail2u/node-csswring</link>
      <pubDate>Fri, 25 Apr 2014 08:19:34 +0900</pubDate>
      <guid isPermaLink="true">https://github.com/hail2u/node-csswring</guid>
      <description>&lt;p&gt;CSSWringはCSSを圧縮(minification)するNode.jsパッケージです。Node.jsパッケージとして組み込むだけでなく、コマンドラインからも実行できます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Projectsに「CSS MQPacker」を追加</title>
      <link>https://github.com/hail2u/node-css-mqpacker</link>
      <pubDate>Sat, 22 Feb 2014 15:39:04 +0900</pubDate>
      <guid isPermaLink="true">https://github.com/hail2u/node-css-mqpacker</guid>
      <description>&lt;p&gt;CSS MQPackerはCSSファイル内に散在するメディアクエリを、クエリごとにまとめCSSファイルを最適化するNode.jsパッケージです。これを利用した&lt;a href="https://github.com/hail2u/grunt-css-mqpacker"&gt;Gruntプラグイン&lt;/a&gt;もあります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Documentsに「安全でアクセシブルなアイコン・フォント」を追加</title>
      <link>http://hail2u.net/documents/bulletproof-icon-fonts.html</link>
      <pubDate>Tue, 28 Jan 2014 11:09:52 +0900</pubDate>
      <guid isPermaLink="true">http://hail2u.net/documents/bulletproof-icon-fonts.html</guid>
      <description>&lt;p&gt;アイコン・フォントの安全な実装についての&lt;a href="http://filamentgroup.com/lab/bulletproof_icon_fonts/"&gt;Bulletproof Accessible Icon Fonts&lt;/a&gt;という記事の日本語訳です。アクセシビリティ上の問題を含め、巷間のアイコン・フォントの現状の課題とその対処についても触れられているので、アイコン・フォントの実装に大いに役に立ってくれるでしょう。&lt;/p&gt;</description>
    </item>
    <lastBuildDate>Wed, 19 Nov 2014 08:57:00 +0900</lastBuildDate>
  </channel>
</rss>