<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xml:lang="ja-JP"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Weblog - Hail2u.net</title>
    <link>http://hail2u.net/blog/</link>
    <description>ウェブ制作やウェブ標準の話題が中心ですが、それに限らず備忘録や日々の記録までを含めることで、10年以上続けることができたウェブログです。Blosxomを使って作られています。</description>
    <language>ja-JP</language>
    <copyright>Copyright &#x00a9; 2002-2014, Kyo Nagashima</copyright>
    <managingEditor>kyo@hail2u.net (Kyo Nagashima)</managingEditor>
    <webMaster>kyo@hail2u.net (Kyo Nagashima)</webMaster>
    <lastBuildDate>Thu, 11 Dec 2014 10:00:19 +0900</lastBuildDate>
    <generator>blosxom v2.1.2+dev</generator>
    <atom:link rel="self" href="http://hail2u.net/blog/feed"/>
    <atom:link rel="hub" href="https://pubsubhubbub.appspot.com/"/>
    <creativeCommons:license>http://creativecommons.org/licenses/by-nc/3.0/</creativeCommons:license>


    <item>
      <title>ららぽーと</title>
      <link>http://hail2u.net/blog/misc/lalaport.html</link>
      <description>来年10月くらいにオープンするらしいららぽーとは順調に工事が進んでいるらしく、ほぼ建物の外観は見えてきた。駅からは私鉄側からも屋根付きのペドウェイでまっすぐいけるようだ。これも半分くらいもうできてる。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Misc.</category>
      <guid isPermaLink="true">http://hail2u.net/blog/misc/lalaport.html</guid>
      <pubDate>Thu, 11 Dec 2014 07:33:00 +0900</pubDate>
      <content:encoded><![CDATA[
<figure>
  <img alt="巨大クレーン3台で建築が進むららぽーとの様子" src="http://hail2u.net/images/blog/lalaport.jpg">
</figure>

<p>来年10月くらいにオープンするらしい<a href="http://www.mitsuifudosan.co.jp/corporate/news/2014/0605_01/">ららぽーと</a>は順調に工事が進んでいるらしく、ほぼ建物の外観は見えてきた。駅からは私鉄側からも屋根付きのペドウェイでまっすぐいけるようだ。これも半分くらいもうできてる。</p>

<p>この大規模商業施設自体には思うところはあまりない(期待はしてる)のだけど、交通環境が激変しそうなことが不安だ。電車か、圏央道から246へ降り相模川を渡って……というメインのアクセスはともかく、問題は市内南部など246側でない方からのアクセスだ。実は駅周辺には車で線路(3つある)を渡る道路がない。東か西に大きく回りこまないと渡ることができない。</p>

<p>そして、なかなか開発が進むことのなかった駅なので、周辺の道路はとても幅が狭い。それでも西側はそこそこ広いが、東側は4tトラックがすれ違えるか怪しいような道路ばかりだ。歩道もほとんどなく、もしここの交通量が増えたら恐ろしそうだと強く感じる。</p>

<p>商業施設の周辺道路も整備されているが、どれもあまり広くなく、かといって歩道が広いとか自転車専用レーンがあるとかでもない。素人考えでは捌けなさそうな気がするがそうでもないのだろうか。</p>

<hr>

<p>市立図書館も一時閉館し、TSUTAYAプロデュースのスタバ付きへ退化する作業が始まった。これも来年オープンだそうだ。これら今開発されている地域は耕作放棄されたコスモス畑か田んぼしかなかったので、まったく思い入れはない。にも関わらず急激に変わり始めててちょっとついていけないなどと年寄り臭いことを思った。</p>]]></content:encoded>
    </item>

    <item>
      <title>風呂の床</title>
      <link>http://hail2u.net/blog/misc/bathroom-floor.html</link>
      <description>タイルだった風呂の床が、分厚い断熱層にアクリル・コーティングされたFRPが重ねられた床に変わった。うちのは石目ホワイトグレー。暖かい……のは全体的に断熱する仕組みになった(+ 暖房が付いた)からではあるんだけど、やはりタイルは冷たかったと思う。みんなの床 Advent Calendarの10日目。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Misc.</category>
      <guid isPermaLink="true">http://hail2u.net/blog/misc/bathroom-floor.html</guid>
      <pubDate>Wed, 10 Dec 2014 04:09:00 +0900</pubDate>
      <content:encoded><![CDATA[
<figure>
  <img alt="アクリル・コーティングされた断熱床材" src="http://hail2u.net/images/blog/bathroom-floor.jpg">
</figure>

<p>タイルだった風呂の床が、<a href="http://www.noritz.co.jp/product/bathroom/riz/color03.html">分厚い断熱層にアクリル・コーティングされたFRPが重ねられた床</a>に変わった。うちのは石目ホワイトグレー。暖かい……のは全体的に断熱する仕組みになった(+ 暖房が付いた)からではあるんだけど、やはりタイルは冷たかったと思う。<a href="http://www.adventar.org/calendars/539">みんなの床 Advent Calendar</a>の10日目。</p>

<p>老いさらばえかけたおっさんなのでタイルより滑りにくいのはすごい安心。表面に弾力はないけれど、断熱材の方が柔らかいので万一滑ってもある程度はショックを吸収してくれる模様。</p>

<p>アクリルのコーティングは硬度8Hと謳われていて、余程のものを落とさない限りは傷つくことはまずないという。8Hとか言われると反射的にスマホの液晶フィルムを思い出してそこそこ割れそうな感じがしたけど、落とす方じゃないから大丈夫みたいだ。</p>

<p>やはり傷がつかないというのは掃除の点で非常に魅力的。CMで浴室のカビをきれいにとか何十年にも渡って放映されていることからもわかるけど、風呂のカビと戦うのはなかなかの忍耐と根性が必要。そのあたりから解放されることに！石目で汚れが目立たたないところは良し悪し。</p>

<hr>

<p>こういう機能性の高いものはハイエンドが存在して一般に降りてくるものと思ってたんだけど、超高級マンションなどの広い風呂場用にはこういった床はおろか、壁もあまり存在しないらしい。そういうところではほぼタイル一択になり、掃除で死ぬという話。狭い風呂で良かった。</p>]]></content:encoded>
    </item>

    <item>
      <title>HTMLの属性を書く順序</title>
      <link>http://hail2u.net/blog/webdesign/html-attribute-order.html</link>
      <description>CSSの定義をアルファベット順にした後、HTMLの属性を書く順序についてずっと考えていた。アルファベット順だとわかりやすいが、非常に読み解きづらくなる。そういった点での読みやすさだけでなく、必須属性を書き忘れないようにもできたら良いのかなと色々考えている。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Web Design</category>
      <guid isPermaLink="true">http://hail2u.net/blog/webdesign/html-attribute-order.html</guid>
      <pubDate>Tue, 09 Dec 2014 02:49:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p><a href="http://hail2u.net/blog/webdesign/i-changed-my-mind-in-2014.html">CSSの定義をアルファベット順に</a>した後、HTMLの属性を書く順序についてずっと考えていた。アルファベット順だとわかりやすいが、非常に読み解きづらくなる。そういった点での読みやすさだけでなく、必須属性を書き忘れないようにもできたら良いのかなと色々考えている。</p>

<p>今のところ以下のような順序が良さそうだと感じている。</p>

<ol>
<li><code>id</code>属性</li>
<li><code>class</code>属性</li>
<li><code>style</code>属性</li>
<li>他属性をアルファベット順で</li>
<li>WAI-ARIA (<code>role</code>属性と<code>aria-*</code>属性)</li>
<li><code>data-*</code>属性</li>
<li>Microdata (<code>item*</code>属性)</li>
</ol>

<p><code>id</code>属性と<code>class</code>属性を先頭にするのはCSSとの兼ね合いで、これらだけ知りたいというケースが多いからだ。使われることが多い<code>class</code>が前の方が効率的だろうと思われるが、一意に確定される<code>id</code>の強さを先頭にすることで表現したい。<code>style</code>属性を使うなら<code>class</code>と離して書くのは良くなさそうなのでこれらに続けて書く。できる限り使わない方が良いのは言うまでもない。</p>

<p>続けて普通の属性をアルファベット順で書くようにする。必須属性の位置が安定しないため、書き忘れを防げないようだが、必須かどうか自体が安定していない。そこで全体的な順序をアルファベット順に固定することで、必須属性が欠けている時に違和感が生じるように、という考えでこうした。</p>

<p>さらにHTML要素の振る舞いを変更または最適化することになるWAI-ARIAの属性を書いていき、最後に補完的な意味合いの強い<code>data-*</code>属性とMicrodataを追加する。</p>

<hr>

<p>条件が多すぎるので他の人が受け入れられるようなものではなさそうだ。アルファベット順、ただし<code>class</code>属性だけ先頭にするという辺りが落とし所として無難に思える。</p>]]></content:encoded>
    </item>

    <item>
      <title>TKGを食べた</title>
      <link>http://hail2u.net/blog/misc/tkg-20141208.html</link>
      <description>かき混ぜてからかける派、かけたあとは混ぜない組。醤油は気分。茶碗よりも丼でやりたい。というよりも卵をご飯にかけるという所業を結構大きくなってから吉野家の牛丼で覚えたので、かき混ぜてからかけるし丼でやる。TKG Advent Calendar 2014ももう8日目か。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Misc.</category>
      <guid isPermaLink="true">http://hail2u.net/blog/misc/tkg-20141208.html</guid>
      <pubDate>Sun, 07 Dec 2014 23:58:00 +0900</pubDate>
      <content:encoded><![CDATA[
<figure>
  <img src="http://hail2u.net/images/blog/tkg-20141208.jpg" alt="内側が赤、外側が黒の塗丼に白いご飯が盛られ、その上へよくかき混ぜられた卵がかけられている">
</figure>

<p>かき混ぜてからかける派、かけたあとは混ぜない組。醤油は気分。茶碗よりも丼でやりたい。というよりも卵をご飯にかけるという所業を結構大きくなってから吉野家の牛丼で覚えたので、かき混ぜてからかけるし丼でやる。<a href="http://www.adventar.org/calendars/342">TKG Advent Calendar 2014</a>ももう8日目か。</p>]]></content:encoded>
    </item>

    <item>
      <title>クラス名の命名規定</title>
      <link>http://hail2u.net/blog/webdesign/css-class-naming-rule.html</link>
      <description>pixivのCSSで使われるクラス名ルールという命名規則の記事を読んでいた。初見では大規模だとBEMの衝突が絶対に起きない書き方の方が優れているように思えた。しかし衝突するであろうことに警報を出すという形にゆるくすることで、開発者たちに自由を与えるというような目的でこうなっているようだ。ちょっと興味深い。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Web Design</category>
      <guid isPermaLink="true">http://hail2u.net/blog/webdesign/css-class-naming-rule.html</guid>
      <pubDate>Sun, 07 Dec 2014 02:20:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p><a href="http://less.carbonfairy.org/post/104312752301">pixivのCSSで使われるクラス名ルール</a>という命名規則の記事を読んでいた。初見では大規模だとBEMの衝突が絶対に起きない書き方の方が優れているように思えた。しかし衝突するであろうことに警報を出すという形にゆるくすることで、開発者たちに自由を与えるというような目的でこうなっているようだ。ちょっと興味深い。</p>

<p>規模が大きくなると制約を厳しくして安定性を重視する一辺倒だったが、こういう自由さをうまく提供しようという考え方をすることはあまりなかった。具体的にも、変更されることがあまりない、またはわかっている人だけが行うひとまとまりのルートにのみ特殊な命名(<code>_</code>で始める)というのはバランスが良さそうに思える。</p>

<p>コードだけを見てみるとうまくいっているというのは少し驚く。<code>_</code>で始まるところはあまり触らない人と<code>_</code>で始まるところを触る人、と人的リソースが能力や職掌に応じてうまく振り分けられているのかなと想像してる。プリプロセッサーありきという印象もあるが、それはもう問題にはならなそうだ。</p>

<p>CSSにもモジュール化、そしてその先のコンポーネント化の波は来ている。最右翼はBEMのような制約の厳しい命名規則であることは間違いなさそうだが、過渡期の今こそチームにあった命名規則を考えるべきなのかもしれない。</p>]]></content:encoded>
    </item>

    <item>
      <title>木曜日のポエム</title>
      <link>http://hail2u.net/blog/misc/thursday-poem.html</link>
      <description>今年は木曜日に内向的な性格の強い記事、ざっくり言うとポエムなどと揶揄されるような記事を書くようにしていた。週で考えるとタイミングとしては良かったような気がする。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Misc.</category>
      <guid isPermaLink="true">http://hail2u.net/blog/misc/thursday-poem.html</guid>
      <pubDate>Sat, 06 Dec 2014 00:58:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>今年は木曜日に内向的な性格の強い記事、ざっくり言うとポエムなどと揶揄されるような記事を書くようにしていた。週で考えるとタイミングとしては良かったような気がする。</p>

<p>月～火は情報の収集に偏りやすく、ポエムのようなものは消費されにくい傾向にあると思う。金～日はそもそも文章をじっくり読まれるようなタイミングでないことが多い。水～木あたりが良いのかなというところで、週末よりだとストレスからシリアスに捉えられる可能性が高いのではないかと木曜にした。</p>

<p>当初は以下のような点を意識して、金曜日にしていた。</p>

<ul>
<li>あまりシリアスに捉えられないように</li>
<li>そもそも読まれないように</li>
<li>フィードを購読している人には読まれるように</li>
</ul>

<p>世迷い事のようなものなのでシリアスに捉えられると困る、というような考えだった。ポエムのようなものは素に近いので、シリアスに捉えられて否定されると辛いとかそういうことでもあったように思う。</p>

<p>しかし春頃から、ポエムのようなものはシリアスに捉えられて初めてその空気感のような曖昧な部分が伝わるのかもしれないと考えるようになった。以降は週末までに拡散し切るであろう木曜に公開するようになっていった。</p>

<hr>

<p>来年も続けよう。</p>]]></content:encoded>
    </item>

    <item>
      <title>Sassでの関数の再帰呼び出し</title>
      <link>http://hail2u.net/blog/coding/recursive-function-in-sass.html</link>
      <description>ちょっとした事情で20回ほど再帰呼び出しする関数をSassで書いたらコンパイラーが落ちた。これは単に関数にバグがあっただけだった。100回程再帰呼び出しする関数を書いてみたが、これは落ちた……と思ったらこれも間違えて無限ループさせてただけだった……。ちゃんと書いてちゃんと限界を確認した。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Coding</category>
      <guid isPermaLink="true">http://hail2u.net/blog/coding/recursive-function-in-sass.html</guid>
      <pubDate>Fri, 05 Dec 2014 01:19:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>ちょっとした事情で20回ほど再帰呼び出しする関数をSassで書いたらコンパイラーが落ちた。これは単に関数にバグがあっただけだった。100回程再帰呼び出しする関数を書いてみたが、これは落ちた……と思ったらこれも間違えて無限ループさせてただけだった……。ちゃんと書いてちゃんと限界を確認した。</p>

<p>以下のようなテスト・コードを書き、<code>$max</code>を書きかえて限界を探った。</p>

<pre><code>$initial: 0;
$max: 302;

@function loop($i) {
  $i: $i + 1;

  @if ($i &lt; $max) {
    @return loop($i);
  } @else {
    @return $i;
  }
}

.test {
  z-index: loop($initial);
}
</code></pre>

<p>コンパイラーが落ちず、出力されるCSSで<code>z-index</code>プロパティーの値が<code>$initial + $max</code>と等しくなれば良い。手元の環境(Sass v3.4.9)では302までは問題なく通り、303にするとstack level too deep (SystemStackError)で落ちた。</p>

<p>再帰呼び出しの内容にもよるかもしれないが、数十回くらいまでなら再帰呼び出ししても問題なさそうだ。</p>]]></content:encoded>
    </item>

    <item>
      <title>ゆるやかな出会い</title>
      <link>http://hail2u.net/blog/blog/encounter.html</link>
      <description>内容に曖昧なところの少ない公式文書や仕様書、あるいはWikipediaの項目などのみをリンクで参照する形でウェブログの記事が書かれることが多くなった。孫引きや孫々引きのような記事は減り、全体的な記事の質は比べ物にならないくらい上がった。その一方でゆるやかな繋がりは死に、それに伴うゆるやかな出会いは消滅した。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Blog</category>
      <guid isPermaLink="true">http://hail2u.net/blog/blog/encounter.html</guid>
      <pubDate>Thu, 04 Dec 2014 02:19:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>内容に曖昧なところの少ない公式文書や仕様書、あるいはWikipediaの項目などのみをリンクで参照する形でウェブログの記事が書かれることが多くなった。孫引きや孫々引きのような記事は減り、全体的な記事の質は比べ物にならないくらい上がった。その一方でゆるやかな繋がりは死に、それに伴うゆるやかな出会いは消滅した。</p>

<p>このあたりのことはもう取り返しがつかないであろうし、今こそTrackBackのような何かが……などといっても混乱させるだけだろう。そういう世界になったというだけの話だ。</p>

<p>今の世界では記事は記事で独立した存在であり、その前後の記事はおろか書いた人のことにまで思い及ぶことはほぼない。あったとしてもそれは否定的な動機によるものだろう。そういった独立した記事達はもはやウェブログのような形態には収まることは無意味で、効率良く横断的に情報のみを得られるようなStack OverflowやQiitaへ、あるいは完全に隔離された匿名ダイアリーやpplogへ、と廃棄されていく。</p>

<p>廃棄というのは多分に過去の幻想、TrackBackが理想通りに機能する世界を夢見ていたことによる悪意ある表現ではあるが、気軽に書き捨てるというような意味だ。記事自体には大きな変化は起きないので、情報量という観点では変化は見えてこない。しかし、記事と記事の繋がりやそれに伴う出会いのような観点で捉えると大きく変わった。</p>

<p>フォローしている人やタグといった無機質な単位でしか記事と出会うことはなくなっている。そしてその記事はほぼどん詰まりで、これまた無機質な公式文書や仕様書、そしてWikipediaの項目へとしか行き着くことはない。そこには新たな情報はあっても、出会いはない。</p>

<p>むしろそういった出会いのようなものがTwitterやLINEといったものに取って代わったことによる必然的な変化なのかもしれない。</p>

<hr>

<p>技術系に限らずAdvent Calendarが個々のウェブログ(やウェブサイト)で書かれなくなったな、と今年は強く感じた。続けてこのようなことを考えていた。</p>

<p>個々のウェブログに書かれていた時は、普段良く読んでいる人がとあるAdvent Calendarに参加すると記事になる。そのため「こういうAdvent Calendarがあったのか」という発見があり、それに参加している他の人々という出会いがあった。いくつかは期待外れであったりもしたが、うちいくつかはとても興味深い出会いだったように思う。</p>

<p>今はどのようなAdvent Calendarがあるかの発見は、QiitaやAdventarの一覧を見る以外にまったくないだろう。具体的な何か、例えばCSSやらBEMやらをもってAdvent Calendarを探すというのなら集約されている現状は効率が良い。でも無作為で意外な出会いもあって欲しいと考えるのは強欲なのだろうか。</p>]]></content:encoded>
    </item>

    <item>
      <title>2014年の宗旨替え</title>
      <link>http://hail2u.net/blog/webdesign/i-changed-my-mind-in-2014.html</link>
      <description>移り変わりが激しい世界なので、去年まで当たり前のようにやっていたことを、今年はまったくやらなくなったりすることはよくある。僕は遂に諦めてCSSの定義(プロパティーと値のセット)を書く順序をアルファベット順に統一した。去年はシンプルなクラス名からBEMへの変更だった。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Web Design</category>
      <guid isPermaLink="true">http://hail2u.net/blog/webdesign/i-changed-my-mind-in-2014.html</guid>
      <pubDate>Wed, 03 Dec 2014 12:49:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>移り変わりが激しい世界なので、去年まで当たり前のようにやっていたことを、今年はまったくやらなくなったりすることはよくある。僕は遂に諦めてCSSの定義(プロパティーと値のセット)を書く順序をアルファベット順に統一した。去年はシンプルなクラス名からBEMへの変更だった。</p>

<p>CSSで定義を書く順序は論理的な理由を持つ順序が良いとは今でも思っている。関連するプロパティーが並んでいれば、そのルールセットがどういう振る舞いをするのかわかりやすいはずだ。そういう意味で<a href="http://hail2u.net/blog/webdesign/css2-property-order.html">CSS 2.1仕様書に出てくる順</a>で書くというのは、仕様書が論理的な構造を持って書かれていることを考えると理にかなっている。</p>

<p>しかし時代は変わった。</p>

<p>CSS 3の時代になり、仕様書はモジュール単位で散在するようになり、実装が出てから安定版に進むようになり、スナップショットは作られなくなった。こうなるとどのような順で書くか仕様書を基準に明確に規定することは難しくなる。CSS 2.1をベースに考えてモジュール化された仕様の位置を決めることはできなくはないが、AnimationなどといったCSS 2.1には欠片も存在しないようなものの位置は決めることができない。</p>

<p>かといって無作為な順番で書くというのは読みづらさを加速する。落とし所としてはアルファベット順がデメリットが少ないという点と賛同を得やすいという点で優れている。そうでなければルールセットごとにひとつの定義しか書かない<a href="https://developers.google.com/speed/articles/optimizing-css">Declaration Just Once</a>アプローチだろうか。</p>

<hr>

<p>Declaration Just Onceアプローチは一度(まだ一度だけ)使ってみた。これはCSSプリプロセッサーと、そしてオブジェクト志向と食合せが非常に悪い。しかしひたすら素のCSSで書くというケースではそこそこうまく行き、保守性が高いことがすこしわかってきた。</p>

<p>CSSファイルでセレクターが散在することが懸念だったが、2006年当時と違ってあるセレクターでの問題はCSSファイルと格闘するわけではない。余程のことがなければ開発者ツールで格闘するので、セレクターがあっちこっちに散らばっていてもほとんど問題になることはなかった。</p>

<p>来年にはうまくいけばCSSプリプロセッサーを捨てることも不可能ではないと感じている。その際にはCSSの定義を書く順序……というかCSSの書き方という単位でまた宗旨変えしそうだ。</p>

<hr>

<p>こういった宗旨替えは誰しも毎年(どころか四半期に一度くらい)何かしらやっていることと思う。みなネタが豊富そうなので、来年は是非アドベント・カレンダーとして作りたい。</p>]]></content:encoded>
    </item>

    <item>
      <title>毛布をかけずに敷く</title>
      <link>http://hail2u.net/blog/misc/laying-out-the-blanket.html</link>
      <description>TwitterのTLで流れてきてた毛布をかけるのではなく敷くのを試してみている。確かに暖かい。熱が上に逃げるから、下に暖かさが維持できるものがあると効率的ということなのかな？ただ断熱性の高い羽毛布団のような掛け布団は必須そう。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Misc.</category>
      <guid isPermaLink="true">http://hail2u.net/blog/misc/laying-out-the-blanket.html</guid>
      <pubDate>Tue, 02 Dec 2014 13:01:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>TwitterのTLで流れてきてた毛布をかけるのではなく敷くのを試してみている。確かに暖かい。熱が上に逃げるから、下に暖かさが維持できるものがあると効率的ということなのかな？ただ断熱性の高い羽毛布団のような掛け布団は必須そう。</p>

<p>下から:</p>

<ol>
<li>マットレス</li>
<li>ベッドパッド</li>
<li>毛布</li>
<li>ボックスシーツ</li>
<li>タオルケット</li>
<li>掛け布団</li>
</ol>

<p>という形にした。体に直接毛布だと、気軽に洗えない毛布が汚れまくりそうで嫌だったため、ベットパッドとボックスシーツの間にした。冬用の厚手でウール(やアクリル)のシーツとかでも良さそうだけど、洗うの大変なので問題外だと思う。</p>

<p>羽毛布団の良いやつ欲しい。けどiMac (Retineモデル)よりも高い。</p>]]></content:encoded>
    </item>

  </channel>
</rss>
