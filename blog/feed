<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xml:lang="ja-JP"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Weblog - Hail2u.net</title>
    <link>http://hail2u.net/blog/</link>
    <description>ウェブ制作やウェブ標準の話題が中心ですが、それに限らず備忘録や日々の記録までを含めることで、10年以上続けることができたウェブログです。Blosxomを使って作られています。</description>
    <language>ja-JP</language>
    <copyright>Copyright &#x00a9; 2002-2014, Kyo Nagashima</copyright>
    <managingEditor>kyo@hail2u.net (Kyo Nagashima)</managingEditor>
    <webMaster>kyo@hail2u.net (Kyo Nagashima)</webMaster>
    <lastBuildDate>Tue, 4 Nov 2014 19:08:37 +0900</lastBuildDate>
    <generator>blosxom v2.1.2+dev</generator>
    <atom:link rel="self" href="http://hail2u.net/blog/feed"/>
    <atom:link rel="hub" href="https://pubsubhubbub.appspot.com/"/>
    <creativeCommons:license>http://creativecommons.org/licenses/by-nc/3.0/</creativeCommons:license>


    <item>
      <title>風呂がないぞ</title>
      <link>http://hail2u.net/blog/misc/no-bath.html</link>
      <description>家に風呂がないと、台所の流しで頭を洗う羽目になり、いちじるしく人の尊厳を奪われる。お掃除機能付きのバスタブで天上人になる予定なので、しばらく未開人で我慢する……と思ったけど、川とかで全身洗ってるであろう未開人の方が人として格上な気がしてきた。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Misc.</category>
      <guid isPermaLink="true">http://hail2u.net/blog/misc/no-bath.html</guid>
      <pubDate>Tue, 04 Nov 2014 19:08:00 +0900</pubDate>
      <content:encoded><![CDATA[
<figure>
  <img alt="風呂が完全に解体され、風呂桶の代わりに脚立とスコップが「これらで体を洗ってください」と言わんばかりに置かれている" src="http://hail2u.net/images/blog/no-bath.jpg">
</figure>

<p>家に風呂がないと、台所の流しで頭を洗う羽目になり、いちじるしく人の尊厳を奪われる。お掃除機能付きのバスタブで天上人になる予定なので、しばらく未開人で我慢する……と思ったけど、川とかで全身洗ってるであろう未開人の方が人として格上な気がしてきた。</p>

<p>近所のスーパー銭湯が800円でなかなか厳しい。</p>]]></content:encoded>
    </item>

    <item>
      <title>R.I.P. Merrell Mootpia Lace</title>
      <link>http://hail2u.net/blog/misc/rip-mootopia-lace.html</link>
      <description>2013年の5月に買ったと書いたMerrellのMootopia Laceがアウトソールの踵部分に穴が空き、ダメになった。実際に買ったのは2012年の終わりだったのでほぼ2年。履き潰した感想を書いておく。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Misc.</category>
      <guid isPermaLink="true">http://hail2u.net/blog/misc/rip-mootopia-lace.html</guid>
      <pubDate>Mon, 03 Nov 2014 10:13:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p><a href="http://hail2u.net/blog/gadget/merrell-mootopia-lace.html">2013年の5月に買ったと書いたMerrellのMootopia Lace</a>がアウトソールの踵部分に穴が空き、ダメになった。実際に買ったのは2012年の終わりだったのでほぼ2年。履き潰した感想を書いておく。</p>

<p>最初はヒモの結び方が安定しなくて脱ぎ履きが面倒な感じだったけど、ドレスシューズと同じ結び方(並行にヒモがかかるやり方)にしたらほぼヒモを解く必要がなくなった。革が柔らかいので、足をねじ込める。</p>

<p>インソールはすごく良かった。インソールがしっかりしていたので、アウトソールの薄さを感じさせない履き心地だったと思う。Birkenstockのインソールよりは少し落ちる程度には良い。ほとんど臭くなかったので洗って再利用しようと考えている。Merrellの抗菌・防臭はまぁまぁ信用できそう。</p>

<p>ダメになった踵は結構初期の段階でやばそうだなーと思ったけど、特にケアすることもなく履き潰した。見た目通りアウトソールがすごく薄いので、普通のスニーカーよりも全然保たないと思う。かといって革靴のように補修しやすいものでもなく、アウトソールの交換も出来ない。でもこの薄さで2年保ったのは及第点なんじゃないかと思う。</p>

<p>このアウトソールの薄さと踵部分の靴本体の薄さとが相まって、ちょっと長めに切ったジーンズとかだと完全に靴で踏むようになる。コンバースのオールスターとかくらいでもアキレス腱の辺りでパンツの裾が引っかかるけど、Mootopia Laceは引っかからず、グッシャグッシャに踏む。これが致命的な感じがあった。</p>

<p>靴そのものとしては満足のいくものだったわけだけど、意外な合わせづらさがあって、もう一回買うのはちょっと躊躇う。</p>]]></content:encoded>
    </item>

    <item>
      <title>vim-css3-syntax v0.13.0</title>
      <link>http://hail2u.net/blog/software/vim-css3-syntax-v0.13.0.html</link>
      <description>HTML5ということでキリが良さそうなのでvim-css3-syntaxのマイナー・バージョンを更新した。v0.12.0からはCounter StylesやFlexible Box Layoutが更新され、見捨てられたHyperlinks PresentationやMarqueeが削除されている。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Software</category>
      <guid isPermaLink="true">http://hail2u.net/blog/software/vim-css3-syntax-v0.13.0.html</guid>
      <pubDate>Sun, 02 Nov 2014 10:15:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>HTML5ということでキリが良さそうなので<a href="https://github.com/hail2u/vim-css3-syntax/compare/v0.12.0...v0.13.0">vim-css3-syntax</a>のマイナー・バージョンを更新した。v0.12.0からは<a href="http://www.w3.org/TR/css-counter-styles-3/">Counter Styles</a>や<a href="http://www.w3.org/TR/css3-flexbox/">Flexible Box Layout</a>が更新され、見捨てられた<a href="http://www.w3.org/TR/css3-hyperlinks/">Hyperlinks Presentation</a>や<a href="http://www.w3.org/TR/css3-marquee/">Marquee</a>が削除されている。</p>

<p>HTML5についてはもう特に思うところはないのだけど、スナップショットとして安定版があるのは様々な根拠に成りうるので歓迎はしてる。世の中の傾向としては「安定版とかうるさい最新版にしろ」とかそういう感じではあるけれども、それが通用しない人たちへの説得材料としては有益。つまりCSS Snapshotの新しいやつをよこせ。</p>

<p><code>hgroup</code>要素以外についてはいまだ有用な<a href="http://hail2u.net/documents/diveintohtml5-semantics.html">結局どうすればいいの？ - Dive Into HTML5</a>もこの機会に是非どうぞ。</p>]]></content:encoded>
    </item>

    <item>
      <title>Google Fontsはいつまであるのか？</title>
      <link>http://hail2u.net/blog/webdesign/google-fonts-and-its-life.html</link>
      <description>Will Google Fonts Ever Be Shut Down?という記事を読んだ。とてつもない数のウェブサイトで利用されているGoogle Fontsが果たしていつまで無料で自由に使えるままなのかを、今のGoogle Fontsの状態とその持つ意味から考察されてる。現状ではメリットがあるので提供しているけれども、それがコストに見合わなくなったらすぐやめるんじゃないかみたいな悲観的な観測で終わる。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Web Design</category>
      <guid isPermaLink="true">http://hail2u.net/blog/webdesign/google-fonts-and-its-life.html</guid>
      <pubDate>Sat, 01 Nov 2014 09:27:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p><a href="http://www.typewolf.com/blog/will-google-fonts-ever-be-shut-down">Will Google Fonts Ever Be Shut Down?</a>という記事を読んだ。とてつもない数のウェブサイトで利用されている<a href="http://www.google.com/fonts">Google Fonts</a>が果たしていつまで無料で自由に使えるままなのかを、今のGoogle Fontsの状態とその持つ意味から考察されてる。現状ではメリットがあるので提供しているけれども、それがコストに見合わなくなったらすぐやめるんじゃないかみたいな悲観的な観測で終わる。</p>

<p>Google Fontsからビジネス・モデルのようなものがよく見えてこないことと一部の限られたユーザーにのみ高く評価されていることが、ジャンルがまったく違うがGoogle Readerと重なるところがあるのは少しわかる。それを考えるとサービスの停止もありそうと考えてしまうのもわからないこともない。でも悲観的になるのはちょっとわからない。</p>

<p>それほどコストはかかっていないと思うし、とんでもなくユーザーが多いものなので、どちらかというと<a href="https://feedburner.google.com/">FeedBurner</a>に近いんじゃないかなと思っている。そのため僕はメンテナンスが放棄される可能性はかなり高いと思うけど、完全に停止される可能性は低いんじゃないかなという印象を持っている。</p>

<p>FeedBurnerが停止されたら、Google Fontsも黄信号だと考えて良さそう。</p>

<hr>

<p>このウェブサイトでは<a href="http://hail2u.net/blog/webdesign/ditch-google-fonts.html">しばらく前からGoogle Fontsを使うのをやめた</a>。主にメンテナンス上の理由であって、突然消えるかもしれないというような危機感を持っていたわけではないけど、改めて考えさせられるところはあった。</p>]]></content:encoded>
    </item>

    <item>
      <title>GitHub Pagesとwwwなしドメイン</title>
      <link>http://hail2u.net/blog/internet/resolve-302-found-with-cloudflare.html</link>
      <description>wwwなしドメインをGitHub Pagesで運営しようとAレコードを使って設定すると、全てのリクエストが302 Foundで処理されるようになる。特に実用上の問題はないが、パフォーマンス上のデメリットは大きい。www付きで運営するのが手っ取り早いが、wwwなしでどうしても運営したい場合はCloudFlare経由にするのがコストが低い解決法だろう。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Internet</category>
      <guid isPermaLink="true">http://hail2u.net/blog/internet/resolve-302-found-with-cloudflare.html</guid>
      <pubDate>Fri, 31 Oct 2014 17:51:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>wwwなしドメインを<a href="https://pages.github.com/">GitHub Pages</a>で運営しようとAレコードを使って設定すると、全てのリクエストが302 Foundで処理されるようになる。特に実用上の問題はないが、パフォーマンス上のデメリットは大きい。www付きで運営するのが手っ取り早いが、wwwなしでどうしても運営したい場合は<a href="https://www.cloudflare.com/">CloudFlare</a>経由にするのがコストが低い解決法だろう。</p>

<p>CloudFlareには<a href="https://support.cloudflare.com/hc/en-us/articles/200169056-CNAME-Flattening-RFC-compliant-support-for-CNAME-at-the-root">CNAME Flattening</a>という機能があって、これによりCNAMEレコードを使ってwwwなしドメインを設定できるようになっている。これを使って設定すると302 Foundによるリダイレクト経由になることを回避することができる。設定は特に(GitHub Pagesを使おうというような人には)難しいことはない。</p>

<p>GitHub Pages側が提供するwwwあり→wwwなしへの301 Moved Permanentlyによる転送も問題なく動作する。</p>

<p>またこの機能はCloudFlareのコア機能であるCDNやセキュリティ対策などとは別に提供されているようだ。そのためDNS Settingsの各レコードでActiveのアイコンをグレーアウトさせても、このCNAMEレコードによるドメインの割り当てはそのまま機能するようになっている。今のGitHub PagesはCDN経由での配信になっているので、必要ないと思うのならCloudFlareのコア機能は無効にしても良いだろう。</p>]]></content:encoded>
    </item>

    <item>
      <title>CSSライブラリーはそのままでどうぞ</title>
      <link>http://hail2u.net/blog/webdesign/dont-process-css-libraries.html</link>
      <description>Normalize.cssを始めとして、Twitter BootstrapやPureに至るまでCSSのライブラリーは数多くある。それらはそれなりに気をつけて作られているが、他のライブラリーと混ぜることはもとより、ページ制作者のCSSと混ぜることは想定されていない。単純にlink要素を使って先に読ませるか連結するだけで使わないと、開発者はもちろんそれらが使われているページのユーザーにも意図しない不具合が起きる可能性がある。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Web Design</category>
      <guid isPermaLink="true">http://hail2u.net/blog/webdesign/dont-process-css-libraries.html</guid>
      <pubDate>Thu, 30 Oct 2014 08:33:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p><a href="http://necolas.github.io/normalize.css/">Normalize.css</a>を始めとして、<a href="http://getbootstrap.com/">Twitter Bootstrap</a>や<a href="http://purecss.io/">Pure</a>に至るまでCSSのライブラリーは数多くある。それらはそれなりに気をつけて作られているが、他のライブラリーと混ぜることはもとより、ページ制作者のCSSと混ぜることは想定されていない。単純に<code>link</code>要素を使って先に読ませるか連結するだけで使わないと、開発者はもちろんそれらが使われているページのユーザーにも意図しない不具合が起きる可能性がある。</p>

<p>そのためNomralize.cssなどではわざわざ以下のように推奨されている。</p>

<figure>
<blockquote>
<p>It is recommended that you include the normalize.css file as <mark>untouched library code</mark>.</p>
</blockquote>

<figcaption>normalize.css v3 - <cite><a href="https://github.com/necolas/normalize.css#install">Install</a></cite></figcaption>
</figure>

<p>概ねライブラリーと呼ばれるものには手を付けるべきではないが、フロントエンド界隈では軽視されている傾向があるように思う。特にCSSにおいては何よりもまずルールセットの記述順が重要になるため、不可逆な変更を行う最適化ツールはCSSライブラリーと相性は良くない。公式に配布されている最小化済みのものそのまま何もせず使うのが確実だ。</p>

<p>ただ最近は様々な最適化・最小化ツールやそれらを効率的に扱えるビルド・ツールがあるため、公式には最小化済みのものが配布されていないこともある。その場合の判断は難しいが、安全第一なら最小化されてないものをそのまま、バランスをとるなら別個に最小化のみ行いそれを使うのが良いだろう。</p>

<hr>

<p>Gruntやgulpのようなビルド・ツールを使う場合は以下のような順序で処理するようにするべきだろう。</p>

<ol>
<li>自身のCSS群を連結</li>
<li>最適化</li>
<li>最小化</li>
<li><em>配布されている最小化済みのライブラリーのCSS</em>と手順3で最小化した自身のCSSを連結</li>
</ol>

<p>手順1はSassなどで行っても構わないだろう。手順2の最適化にはCSSスプライトの生成ツールや<a href="https://github.com/giakki/uncss">UnCSS</a>のような非可逆なツールでの作業が含まれ、手順3では可逆に近い安全な変換作業を行う。ここで自身で書いたCSSを一旦完成させ、最後にCSSライブラリー群と連結させるという形だ。</p>

<p>このようなやり方だと開発中(手順1の辺り)ではCSSライブラリーが含まれない状態になるが、開発中にはパフォーマンスに目をつぶって<code>link</code>要素などでCSSライブラリーを読みこめば良い。パフォーマンスに類する問題は別に計測と解決を行うべきと考えられるので、大きな問題は起こらないはずだ。</p>

<p>このような形でビルドすることのメリットはCSSライブラリーが配布された状態そのままであることが保証されることが挙げられ、それが全てと言って良い。他にライセンスが書かれたコメントを確実に残すことができるというような副次的なメリットもある。ビルド時間も少し速くなるが、それはプロダクションのファイルが少し大きめになりやすいことと相殺される程度のメリットで、特筆するべきようなことではないだろう。</p>

<hr>

<p>僕の作っている<a href="https://github.com/hail2u/normalize.scss">Modularized Normalize.css</a>はページ制作者のCSSに混ぜ込むことを目的としたものなので、このあたりの主張と対立するものだ。が、これについては少し目的が違う。そのうち書くような気がするかもしれないこともない。</p>]]></content:encoded>
    </item>

    <item>
      <title>grunt.verbose.log</title>
      <link>http://hail2u.net/blog/coding/grunt-verbose-log.html</link>
      <description>最近、多くの公式Gruntプラグインでログの出力が変わった(メンテナーによって違う)。正常に動作した時は何も出さず、エラーがあった時にのみエラー・メッセージを出すという形。ただし--verboseオプションを付けた場合には何をやったのかを確認できるようにgrunt.verbose.logを使うようになっている。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Coding</category>
      <guid isPermaLink="true">http://hail2u.net/blog/coding/grunt-verbose-log.html</guid>
      <pubDate>Wed, 29 Oct 2014 08:27:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>最近、多くの公式Gruntプラグインでログの出力が変わった(メンテナーによって違う)。正常に動作した時は何も出さず、エラーがあった時にのみエラー・メッセージを出すという形。ただし<code>--verbose</code>オプションを付けた場合には何をやったのかを確認できるように<code>grunt.verbose.log</code>を使うようになっている。</p>

<p><code>grunt.verbose.log</code>は<code>grunt.log</code>と同じなので、置換するだけで既存のGruntタスクの書き直しは終わり。書く側としてはログを綺麗に整形して色を付けて……などとしなくてよくなり、メッセージの簡略化(スタック・トレースで出てきそうな部分は省略できる)やcolorsやchalkへの依存の削除が可能になると思う。</p>

<p>なぜこうなったのか経緯がよくわからないけれど、Gruntの次期バージョンではこの辺りの制御をユーザー側に任せるようにしたいというような議論があって、それを意識して既存の機能で先取りした形になっているみたいだ。<code>grunt.verbose.log</code>でうまく先取りできているか、は大いに疑問がある。</p>

<p>ログの表示をユーザーに制御させるのは良いと思うけど、デフォルトでまったく何も表示しないというのは良くないと思う。<code>--quiet</code>と無指定と<code>--verbose</code>の3種類の方がわかりやすいはずだ。</p>

<hr>

<p>僕も自分のGruntタスクやオレオレGruntタスクで消してみたけど、やっぱり正常系のログもあった方が安心すると感じた。戻そう。</p>]]></content:encoded>
    </item>

    <item>
      <title>GitHub PagesとContent-Typeヘッダー</title>
      <link>http://hail2u.net/blog/internet/github-pages-and-content-type-header.html</link>
      <description>GitHub Pagesでは未知のファイルはapplication/octet-streamで配信される。未知のファイルとは未知の拡張子を持つファイルと拡張子を持たないファイルの二つに分けられる。例えばこのウェブサイトのRSSフィードは拡張子なしのfeedというファイルのため、適切なContent-Type (application/rss+xml)で配信されていない。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Internet</category>
      <guid isPermaLink="true">http://hail2u.net/blog/internet/github-pages-and-content-type-header.html</guid>
      <pubDate>Tue, 28 Oct 2014 08:58:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>GitHub Pagesでは未知のファイルは<code>application/octet-stream</code>で配信される。未知のファイルとは未知の拡張子を持つファイルと拡張子を持たないファイルの二つに分けられる。例えばこのウェブサイトのRSSフィードは拡張子なしの<code>feed</code>というファイルのため、適切なContent-Type (<code>application/rss+xml</code>)で配信されていない。</p>

<p>Content-Typeの制御はファイルの拡張子でのみ行うことにGitHub Pagesではなっている。RSSならば<code>.rss</code>、Atomなら<code>.atom</code>という拡張子である必要があるということだ。バックエンド(<a href="https://www.fastly.com/">Fastly</a>？)でそうなっているためな気がするが、ちょっと不自由なところがある。</p>

<p>ごく一部のRSSリーダーは適切なContent-Typeが返ってこない場合に購読できなかったり新着が読めなくなったりするようだ。Content-Typeを無視しろとまでは思わないが、せめて<code>application/octet-stream</code>は解釈を試みて欲しいと思う。</p>

<hr>

<p>今のところURLを維持したまま直す方法がないのでこのままにしておく。Content-Type以外にもCache-Controlといったパフォーマンスに直結するヘッダーも変更したいと感じることも多く、ホスティング自体は静的ファイルのみだが、<code>.htaccess</code>的なものは使えるレンタル・サーバーが欲しいなという気持ちが強まってきた。</p>]]></content:encoded>
    </item>

    <item>
      <title>aspect-ratio特性</title>
      <link>http://hail2u.net/blog/webdesign/aspect-ratio-feature.html</link>
      <description>ビューポートが16:9以上かどうかの判定にaspect-ratioを使って行おうとしていた。が、min-aspect-ratio: 16/9でうまく動かず、もしや未実装かとあーでもないこーでもないと色々やってたら、単にmax-aspect-ratioでやるべきなだけだった。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Web Design</category>
      <guid isPermaLink="true">http://hail2u.net/blog/webdesign/aspect-ratio-feature.html</guid>
      <pubDate>Mon, 27 Oct 2014 05:15:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>ビューポートが16:9以上かどうかの判定に<code>aspect-ratio</code>を使って行おうとしていた。が、<code>min-aspect-ratio: 16/9</code>でうまく動かず、もしや未実装かとあーでもないこーでもないと色々やってたら、単に<code>max-aspect-ratio</code>でやるべきなだけだった。</p>

<p>View Demo: <a href="http://hail2u.net/pub/test/599.html">Detect viewport ratio is 16:9+ or not</a></p>

<p><code>aspect-ratio</code>特性では<a href="http://www.w3.org/TR/css3-mediaqueries/#values"><code>&lt;ratio&gt;</code>という種類の値</a>で指定する。この<code>&lt;ratio&gt;</code>は<code>正の整数/正の整数</code>でしか書くことができない。しかし、<code>min-</code>か<code>max-</code>プリフィックスをつける場合、比率として少数化した値で扱われる。そのため16:9より縦の比率が大きい16:10や16:12にマッチさせたい場合は、<code>max-</code>プリフィックスを使う必要がある。</p>

<p><code>aspect-ratio</code>特性を使ったメディア・クエリーの式は縦幅を分母とした分数で記述し、プリフィックスはそれを少数に変換して考える。こう覚えておくと良さそう。</p>

<hr>

<p>16:9<em>以上</em>という考え方自体が間違っているのかもしれない。縦横比は横幅が基準という印象を持っていて、それに従うと<em>以上</em>で良いと思っていた。けれども縦幅が分母、つまり基準になるこのようなケースもあるようだ。</p>

<p>またこの調査の過程で<code>min-height: 56.25vw</code>とかでも良いんじゃないかと考え、試したのもデモに載せておいた。<code>56.25vw</code>は<code>100vw / 16 * 9</code>で計算した答えで、ビューポートの横幅が<code>100vw</code>で参照できることを利用してる。けれどもFirefox 33と35では動いたものの、Chrome 38 (と40)やInternet Explorer 11 (と12)では動かなかった。これら動かないブラウザーでは、どうも<code>vw</code>単位そのものがメディア・クエリーの式では扱えないみたいだ。</p>]]></content:encoded>
    </item>

    <item>
      <title>靴擦れとキズパワーパッド</title>
      <link>http://hail2u.net/blog/misc/shoe-sore-and-band-aid-active-flex.html</link>
      <description>新しい靴を買っておろしたら、10数年ぶりくらいに靴擦れになった。踵とかではなくて右の薬指の上。指にできたのは記憶になくて、こんなところにもできるんだ……という感じだった。</description>
      <author>kyo@hail2u.net (Kyo Nagashima)</author>
      <category>Misc.</category>
      <guid isPermaLink="true">http://hail2u.net/blog/misc/shoe-sore-and-band-aid-active-flex.html</guid>
      <pubDate>Sun, 26 Oct 2014 03:39:00 +0900</pubDate>
      <content:encoded><![CDATA[
<p>新しい靴を買っておろしたら、10数年ぶりくらいに靴擦れになった。踵とかではなくて右の薬指の上。指にできたのは記憶になくて、こんなところにもできるんだ……という感じだった。</p>

<p>で、数年ぶりに絆創膏的なものを貼ろうとしたら<a href="http://www.amazon.co.jp/gp/product/B000FQNKKQ/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B000FQNKKQ&linkCode=as2&amp;tag=hail2unet-22">BAND-AIDのキズパワーパッド</a>のストックがあったので初めて使った。すごいっていうのは聞いていたんだけど、普通の絆創膏からの進化っぷりが想像以上にすごくて驚いた。密着性がものすごい上に完全防水なので、風呂でも貼りっぱなしで済んだのはすごく良かった。治るまでこのままでよさそう。</p>

<p>靴擦れ用というものもあるみたいなので、踵とかにできたら買ってみよう。</p>]]></content:encoded>
    </item>

  </channel>
</rss>
